LAB
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Equals method and override keyword in oops


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime;
using System.Text;
using System.Threading.Tasks;

namespace LearnCSharp
{
    class Point
    {
        public int X { get; set; }
        public int Y { get; set; }

        public override bool Equals(object obj)
        {
            var other = (Point)obj;
            return X == other.X && Y == other.Y;
        }
    }

    internal class Program
    {
        static void Main()
        {
            var p1 = new Point() { X = 1, Y = 2 };
            var p2 = new Point() { X = 1, Y = 2 };
            if (p1.Equals(p2))
            {
                Console.WriteLine("Same");
            }
            else
            {
                Console.WriteLine("Not same");
            }
        }

    }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2.Simple example to make a class as array

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime;
using System.Text;
using System.Threading.Tasks;
 
namespace LearnCSharp
{
    class Employee
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public int Age { get; set; }
 
        public override string ToString()
        {
            return $"Name: {Name} {Environment.NewLine}" +
                $"Email: {Email} {Environment.NewLine}" +
                $"Age: {Age}";
        }
    }
 
    internal class Program
    {
        static void Main()
        {
            var employees = new Employee[10];
            int count = 0;
 
            while (true)
            {
                Console.WriteLine("1. Add new employee");
                Console.WriteLine("2. Search employee");
                Console.Write("Please enter your option: ");
                var option = Console.ReadLine();
 
                switch (option)
                {
                    case "1":
                        var emp = new Employee();
                        Console.Write("Name: ");
                        emp.Name = Console.ReadLine();
                        Console.Write("Email: ");
                        emp.Email = Console.ReadLine();
                        Console.Write("Age: ");
                        emp.Age = int.Parse(Console.ReadLine());
                        employees[count] = emp;
                        count++;
                        break;
                    case "2":
                        Console.WriteLine("Email: ");
                        var email = Console.ReadLine();
 
                        for (int i = 0; i < count; i++)
                        {
                            var e = employees[i];
                            if (e.Email == email)
                            {
                                Console.WriteLine(e);
                                break;
                            }
                        }
                        break;
                    default:
                        Console.WriteLine("Invalid option");
                        break;
                }
            }
        }
 
    }
}--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2.Implementing same example to make a class as array with functions

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Runtime;
using System.Text;
using System.Threading.Tasks;

namespace LearnCSharp
{
    class Employee
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public int Age { get; set; }

        public override string ToString()
        {
            return $"Name: {Name} {Environment.NewLine}" +
                $"Email: {Email} {Environment.NewLine}" +
                $"Age: {Age}";
        }
    }
    class EmployeeManager
    {
        public Employee[] _employees = new Employee[10];
        private int _count=0;
        public void Add()
        {
            var emp = new Employee();
            Console.Write("Name: ");
            emp.Name = Console.ReadLine();
            Console.Write("Email: ");
            emp.Email = Console.ReadLine();
            Console.Write("Age: ");
            emp.Age = int.Parse(Console.ReadLine());
            _employees[_count] = emp;
            _count++;

        }
        public void search()
        {
            Console.WriteLine("Email: ");
                        var email = Console.ReadLine();

                        for (int i = 0; i<_count; i++)
                        {
                            var e = _employees[i];
                            if (e.Email == email)
                            {
                                Console.WriteLine(e);
                                break;
                            }
                         }
        }
    }

    internal class Program
    {
        static void Main()
        {
            var manager = new EmployeeManager();
            

            while (true)
            {
                Console.WriteLine("1. Add new employee");
                Console.WriteLine("2. Search employee");
                Console.Write("Please enter your option: ");
                var option = Console.ReadLine();

                switch (option)
                {
                    case "1":
                        manager.Add();
                        break;
                    case "2":
                        manager.search();
                        break;
                    default:
                        Console.WriteLine("Invalid option");
                        break;
                }
            }
        }

    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4.Working of Enum


using System;
using System.Runtime.Remoting.Services;

class Program
{
    enum Operation
    {
        ToUpper, ToLower, Trim
    }
    static void StringOperation(string input, Operation operation)
    {
        switch (operation)
        {
            case Operation.ToUpper:
                Console.WriteLine(input.ToUpper());
                break;
            case Operation.ToLower:
                Console.WriteLine(input.ToLower());
                break;
            case Operation.Trim:
                Console.WriteLine(input.Trim());
                break;
            default:
                Console.WriteLine("Invalid operation");
                break;
        }
    }

    static void Main(string[] args)
    {   
        
        StringOperation("hello", Operation.ToUpper);
        StringOperation("HI", Operation.ToLower);
        StringOperation("helooooooooooo", Operation.Trim);
    }
}
