public interface ICheckInsRepo
{
    IEnumerable<CheckIn> GetAllCheckIns();  // Ensure the return type is IEnumerable<CheckIn>
    void LogCheckIn(int medicationId, int scheduleId, string adherenceStatus, string sideEffects = null);
    void UpdateCheckIn(CheckIn checkIn);
    void SaveChanges();
}






public class CheckInsRepo : ICheckInsRepo
{
    private readonly MatDbEntities _context;

    public CheckInsRepo(MatDbEntities context)
    {
        _context = context;
    }

    public IEnumerable<CheckIn> GetAllCheckIns()
    {
        return _context.CheckIns.ToList();  // This returns List<CheckIn>, which is compatible with IEnumerable<CheckIn>
    }

    public void LogCheckIn(int medicationId, int scheduleId, string adherenceStatus, string sideEffects = null)
    {
        var checkIn = new CheckIn
        {
            ScheduleID = scheduleId,
            AdherenceStatus = adherenceStatus,
            SideEffects = sideEffects,
            CreatedAt = DateTime.Now
        };

        _context.CheckIns.Add(checkIn);
        _context.SaveChanges();
    }

    public void UpdateCheckIn(CheckIn checkIn)
    {
        // Implementation for updating a check-in
    }

    public void SaveChanges()
    {
        _context.SaveChanges();
    }
}
