<Window x:Class="MedicationApp.Views.CheckInPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Check In" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Medication Selection -->
        <ComboBox x:Name="MedicationComboBox" 
                  ItemsSource="{Binding Medications}" 
                  DisplayMemberPath="Name" 
                  SelectedItem="{Binding SelectedMedication}"
                  Margin="10"/>

        <!-- Action Buttons -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
            <Button Content="Taken" Command="{Binding MarkAsTakenCommand}" Width="100" Margin="5"/>
            <Button Content="Missed" Command="{Binding MarkAsMissedCommand}" Width="100" Margin="5"/>
        </StackPanel>

        <!-- Report Side Effects -->
        <StackPanel Grid.Row="2" Orientation="Vertical" HorizontalAlignment="Center" Margin="10">
            <TextBox x:Name="SideEffectsTextBox" Text="{Binding SideEffects}" Width="300" Height="100" Margin="5"/>
            <Button Content="Report Side Effects" Command="{Binding ReportSideEffectsCommand}" Width="150" Margin="5"/>
        </StackPanel>
    </Grid>
</Window>







using System;
using System.Linq;
using MedicationApp.Models;

namespace MedicationApp.Repositories
{
    public class CheckInRepository : ICheckInRepository
    {
        private readonly MedicationDbContext _context;

        public CheckInRepository(MedicationDbContext context)
        {
            _context = context;
        }

        public void LogCheckIn(int medicationId, bool isTaken, string sideEffects = null)
        {
            var checkIn = new CheckIn
            {
                MedicationId = medicationId,
                IsTaken = isTaken,
                SideEffects = sideEffects,
                Timestamp = DateTime.Now
            };

            _context.CheckIns.Add(checkIn);
            _context.SaveChanges();
        }
    }

    public interface ICheckInRepository
    {
        void LogCheckIn(int medicationId, bool isTaken, string sideEffects = null);
    }
}







using System.Collections.ObjectModel;
using System.Windows.Input;
using MedicationApp.Models;
using MedicationApp.Repositories;
using System.Linq;

namespace MedicationApp.ViewModels
{
    public class CheckInViewModel : ViewModelBase
    {
        private readonly ICheckInRepository _repository;

        public CheckInViewModel(ICheckInRepository repository)
        {
            _repository = repository;
            LoadMedications();
            MarkAsTakenCommand = new RelayCommand(OnMarkAsTaken);
            MarkAsMissedCommand = new RelayCommand(OnMarkAsMissed);
            ReportSideEffectsCommand = new RelayCommand(OnReportSideEffects);
        }

        public ObservableCollection<Medication> Medications { get; set; }
        public Medication SelectedMedication { get; set; }
        public string SideEffects { get; set; }

        public ICommand MarkAsTakenCommand { get; }
        public ICommand MarkAsMissedCommand { get; }
        public ICommand ReportSideEffectsCommand { get; }

        private void LoadMedications()
        {
            using (var context = new MedicationDbContext())
            {
                Medications = new ObservableCollection<Medication>(context.Medications.ToList());
            }
        }

        private void OnMarkAsTaken()
        {
            if (SelectedMedication != null)
            {
                _repository.LogCheckIn(SelectedMedication.Id, true);
            }
        }

        private void OnMarkAsMissed()
        {
            if (SelectedMedication != null)
            {
                _repository.LogCheckIn(SelectedMedication.Id, false);
            }
        }

        private void OnReportSideEffects()
        {
            if (SelectedMedication != null && !string.IsNullOrEmpty(SideEffects))
            {
                _repository.LogCheckIn(SelectedMedication.Id, true, SideEffects);
            }
        }
    }
}






using System.Windows;
using MedicationApp.ViewModels;

namespace MedicationApp.Views
{
    public partial class CheckInPage : Window
    {
        public CheckInPage()
        {
            InitializeComponent();
            DataContext = new CheckInViewModel(new CheckInRepository(new MedicationDbContext()));
        }
    }
}






