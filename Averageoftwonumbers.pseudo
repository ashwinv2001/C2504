<Window x:Class="BankManagementSystem.AccountListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BankManagementSystem" 
        xmlns:viewmodels="clr-namespace:BankManagementSystem.ViewModels" 
        d:DataContext="{d:DesignInstance Type=viewmodels:AccountViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Closed="Window_Closed" Closing="Window_Closing">

    <Grid MaxWidth="1200" Margin="10 10 10 10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="Account Manager" FontSize="24" FontWeight="bold" TextAlignment="center"/>

        <Button Grid.Row="1" Content="Add Account" Width="200" Height="30" Margin="0 10 0 0" HorizontalAlignment="Left"
                Background="#9e0344" Foreground="yellow" FontWeight="bold" Click="Button_Click"/>

        <!-- Interest Rate Filter -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 10 0 0">
            <TextBlock Text="Filter by Interest Rate:" VerticalAlignment="Center" Margin="0 0 10 0"/>
            <TextBox Width="100" Text="{Binding FilterInterestRate, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 10 0"/>
            <Button Content="Apply Filter" Width="100" Click="ApplyFilter_Click" Background="#9e0344" Foreground="yellow"/>
        </StackPanel>

        <!-- DataGrid for Accounts -->
        <DataGrid x:Name="grdAccounts" Grid.Row="3" Margin="0 10 0 0"
                  SelectedItem="{Binding SelectedAccount, Mode=TwoWay}" IsReadOnly="True" AreRowDetailsFrozen="True" 
                  AutoGenerateColumns="False" SelectionMode="Single" ItemsSource="{Binding FilteredAccounts}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Account Number" Binding="{Binding AccountNumber}"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Balance" Binding="{Binding Balance}"/>
                <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
                <DataGridTextColumn Header="Email" Binding="{Binding Email}"/>
                <DataGridTextColumn Header="Phone Number" Binding="{Binding PhoneNumber}"/>
                <DataGridTextColumn Header="Address" Binding="{Binding Address}"/>
                <DataGridTextColumn Header="IsActive" Binding="{Binding IsActive}"/>
                <DataGridTextColumn Header="Interest Percentage" Binding="{Binding InterestPercentage}"/>
                <DataGridTextColumn Header="Transaction Count" Binding="{Binding TransactionCount}"/>
                <DataGridTextColumn Header="Last Transaction Date" Binding="{Binding LastTransactionDate}"/>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button x:Name="btnView" Content="View Account" Width="200" Height="30" Margin="10 10 0 0" HorizontalAlignment="Right"
                    Background="#9e0344" Foreground="yellow" FontWeight="bold" Click="btnView_Click"/>
            <Button x:Name="btnDelete" Content="Mark As Delete" Width="200" Height="30" Margin="10 10 0 0" HorizontalAlignment="Right"
                    Background="#9e0344" Foreground="yellow" FontWeight="bold" Command="{Binding DeleteCommand}"/>
            <Button Content="Update Account" Width="200" Height="30" Margin="30 10 0 0" HorizontalAlignment="Right"
                    Background="#9e0344" Foreground="yellow" FontWeight="bold" Click="Button_Click_1"/>
        </StackPanel>

    </Grid>

</Window>





using System;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Windows;

namespace BankManagementSystem
{
    public partial class AccountListWindow : Window, INotifyPropertyChanged
    {
        private ObservableCollection<Account> _accounts;
        private ObservableCollection<Account> _filteredAccounts;
        private string _filterInterestRate;

        public AccountListWindow()
        {
            InitializeComponent();
            // Initialize accounts collection (this would normally be populated from a database or data source)
            _accounts = new ObservableCollection<Account>(); // Replace with actual data source
            FilteredAccounts = new ObservableCollection<Account>(_accounts);
            DataContext = this;
        }

        public ObservableCollection<Account> FilteredAccounts
        {
            get { return _filteredAccounts; }
            set { _filteredAccounts = value; OnPropertyChanged(nameof(FilteredAccounts)); }
        }

        public string FilterInterestRate
        {
            get { return _filterInterestRate; }
            set { _filterInterestRate = value; OnPropertyChanged(nameof(FilterInterestRate)); }
        }

        private void ApplyFilter_Click(object sender, RoutedEventArgs e)
        {
            if (double.TryParse(FilterInterestRate, out double interestRate))
            {
                FilteredAccounts = new ObservableCollection<Account>(_accounts.Where(a => a.InterestPercentage == interestRate));
            }
            else
            {
                MessageBox.Show("Please enter a valid interest rate.");
            }
        }

        // Implement INotifyPropertyChanged
        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged(string propertyName) =>
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

