using System.ComponentModel;

namespace TwoWayBindingExample
{
    public class PersonViewModel : INotifyPropertyChanged
    {
        private int age;

        public int Age
        {
            get => age;
            set
            {
                if (age != value)
                {
                    age = value;
                    OnPropertyChanged(nameof(Age));
                }
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}



<Window x:Class="TwoWayBindingExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:TwoWayBindingExample"
        Title="Two-Way Binding Example" Height="200" Width="300">

    <Window.DataContext>
        <local:PersonViewModel />
    </Window.DataContext>

    <StackPanel Margin="20">
        <!-- Slider bound to Age property in TwoWay mode -->
        <Slider Minimum="0" Maximum="100" Value="{Binding Age, Mode=TwoWay}" Width="200" Margin="0,0,0,10"/>

        <!-- TextBox bound to Age property in TwoWay mode -->
        <TextBox Text="{Binding Age, Mode=TwoWay}" Width="50" HorizontalAlignment="Center"/>
    </StackPanel>
</Window>




using System.Windows;

namespace TwoWayBindingExample
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }
    }
}
