<Window x:Class="TreeViewExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="TreeView Example" Height="350" Width="400">
    <Grid>
        <TreeView x:Name="treeView" HorizontalAlignment="Left" VerticalAlignment="Top" Width="380" Height="300" 
                  MouseRightButtonDown="TreeView_MouseRightButtonDown">
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Rename" Click="RenameMenuItem_Click"/>
                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>
    </Grid>
</Window>





using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;

namespace TreeViewExample
{
    public partial class MainWindow : Window
    {
        private TreeViewItem _selectedNode;

        public MainWindow()
        {
            InitializeComponent();
            CreateTree();
        }

        private void CreateTree()
        {
            // Create root node
            TreeViewItem rootNode = new TreeViewItem() { Header = "Root Node" };

            // Create child nodes
            TreeViewItem childNode1 = new TreeViewItem() { Header = "Child Node 1" };
            TreeViewItem childNode2 = new TreeViewItem() { Header = "Child Node 2" };

            // Create sub-child nodes
            TreeViewItem subChildNode1 = new TreeViewItem() { Header = "Sub-Child Node 1" };
            TreeViewItem subChildNode2 = new TreeViewItem() { Header = "Sub-Child Node 2" };

            // Add sub-child nodes to child nodes
            childNode1.Items.Add(subChildNode1);
            childNode1.Items.Add(subChildNode2);

            // Add child nodes to root node
            rootNode.Items.Add(childNode1);
            rootNode.Items.Add(childNode2);

            // Add root node to TreeView
            treeView.Items.Add(rootNode);
        }

        private void TreeView_MouseRightButtonDown(object sender, MouseButtonEventArgs e)
        {
            // Get the clicked node
            _selectedNode = (TreeViewItem)treeView.SelectedItem;
        }

        private void RenameMenuItem_Click(object sender, RoutedEventArgs e)
        {
            if (_selectedNode != null)
            {
                TextBox textBox = new TextBox
                {
                    Text = _selectedNode.Header.ToString(),
                    Width = 200
                };
                textBox.KeyDown += TextBox_KeyDown;
                textBox.LostFocus += TextBox_LostFocus;

                // Replace the header with a TextBox
                _selectedNode.Header = textBox;
                textBox.Focus();
                textBox.SelectAll();
            }
        }

        private void TextBox_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.Enter)
            {
                TextBox textBox = sender as TextBox;
                if (_selectedNode != null)
                {
                    _selectedNode.Header = textBox.Text; // Update the header with the new name
                }
            }
            else if (e.Key == Key.Escape)
            {
                // Cancel renaming
                if (_selectedNode != null)
                {
                    TextBox textBox = sender as TextBox;
                    _selectedNode.Header = textBox.Text; // Restore the original name
                }
            }
        }

        private void TextBox_LostFocus(object sender, RoutedEventArgs e)
        {
            TextBox textBox = sender as TextBox;
            if (_selectedNode != null)
            {
                _selectedNode.Header = textBox.Text; // Update the header with the new name
            }
        }
    }
}
