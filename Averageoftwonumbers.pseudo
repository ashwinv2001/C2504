using System.ComponentModel;

namespace MVVMExample.Model
{
    public class Person : INotifyPropertyChanged
    {
        private string firstName;
        private string lastName;

        public string FirstName
        {
            get { return firstName; }
            set
            {
                firstName = value;
                OnPropertyChanged("FirstName");
            }
        }

        public string LastName
        {
            get { return lastName; }
            set
            {
                lastName = value;
                OnPropertyChanged("LastName");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}






using System.Windows.Input;
using MVVMExample.Model;

namespace MVVMExample.ViewModel
{
    public class PersonViewModel
    {
        public Person Person { get; set; }

        public ICommand UpdateNameCommand { get; set; }

        public PersonViewModel()
        {
            Person = new Person { FirstName = "John", LastName = "Doe" };
            UpdateNameCommand = new RelayCommand(UpdateName);
        }

        private void UpdateName()
        {
            Person.FirstName = "Jane";
            Person.LastName = "Smith";
        }
    }

    public class RelayCommand : ICommand
    {
        private readonly Action execute;

        public RelayCommand(Action execute)
        {
            this.execute = execute;
        }

        public event EventHandler CanExecuteChanged;

        public bool CanExecute(object parameter) => true;

        public void Execute(object parameter) => execute();
    }
}





<Window x:Class="MVVMExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MVVM Example" Height="200" Width="300">

    <Window.DataContext>
        <local:PersonViewModel />
    </Window.DataContext>

    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
        <TextBlock Text="First Name:" Margin="5" />
        <TextBox Text="{Binding Person.FirstName}" Width="200" Margin="5" />

        <TextBlock Text="Last Name:" Margin="5" />
        <TextBox Text="{Binding Person.LastName}" Width="200" Margin="5" />

        <Button Content="Update Name" Command="{Binding UpdateNameCommand}" Width="200" Margin="10" />
    </StackPanel>
</Window>




