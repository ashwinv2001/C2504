using System;
using System.Windows.Input;

public class RelayCommand : ICommand
{
    private readonly Action _execute;
    private readonly Func<bool> _canExecute;

    public RelayCommand(Action execute, Func<bool> canExecute = null)
    {
        _execute = execute;
        _canExecute = canExecute;
    }

    public bool CanExecute(object parameter) => _canExecute == null || _canExecute();

    public void Execute(object parameter) => _execute();

    public event EventHandler CanExecuteChanged
    {
        add => CommandManager.RequerySuggested += value;
        remove => CommandManager.RequerySuggested -= value;
    }
}





using System.ComponentModel;
using System.Windows;

public class MainViewModel : INotifyPropertyChanged
{
    private string _inputText;

    public MainViewModel()
    {
        ShowMessageCommand = new RelayCommand(OnShowMessage, CanShowMessage);
    }

    public string InputText
    {
        get => _inputText;
        set
        {
            _inputText = value;
            OnPropertyChanged(nameof(InputText));
        }
    }

    public ICommand ShowMessageCommand { get; }

    private void OnShowMessage()
    {
        MessageBox.Show($"Hello, {InputText}");
    }

    private bool CanShowMessage()
    {
        return !string.IsNullOrWhiteSpace(InputText);
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void OnPropertyChanged(string propertyName)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}



<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Hello Message App" Height="200" Width="400">
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>

    <Grid>
        <TextBox Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}" Width="200" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-30,0,0"/>
        <Button Content="Show Message" Command="{Binding ShowMessageCommand}" Width="100" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,30,0,0"/>
    </Grid>
</Window>
