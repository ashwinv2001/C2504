
<Window x:Class="SquareCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Square Calculator" Height="200" Width="300">
    <Grid>
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10">
            <!-- Input for the number -->
            <TextBox x:Name="NumberInput" Width="200" Height="30" Margin="0,10,0,10"
                     HorizontalAlignment="Center" VerticalAlignment="Center" />

            <!-- Button to calculate the square -->
            <Button Content="Calculate Square" Width="200" Height="30"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Click="CalculateSquare_Click" />

            <!-- Label to display the result -->
            <Label x:Name="ResultLabel" Width="200" Height="30"
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   Content="Result will be shown here" />
        </StackPanel>
    </Grid>
</Window>





using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;

namespace SquareCalculator
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            NumberInput.Text = "Enter a number";
            NumberInput.Foreground = Brushes.Gray;
            
            // Add event handlers to handle placeholder functionality
            NumberInput.GotFocus += RemovePlaceholder;
            NumberInput.LostFocus += ShowPlaceholder;
        }

        // Event handler to remove the placeholder text when the TextBox gets focus
        private void RemovePlaceholder(object sender, RoutedEventArgs e)
        {
            if (NumberInput.Text == "Enter a number")
            {
                NumberInput.Text = "";
                NumberInput.Foreground = Brushes.Black;
            }
        }

        // Event handler to show the placeholder text when the TextBox loses focus and is empty
        private void ShowPlaceholder(object sender, RoutedEventArgs e)
        {
            if (string.IsNullOrWhiteSpace(NumberInput.Text))
            {
                NumberInput.Text = "Enter a number";
                NumberInput.Foreground = Brushes.Gray;
            }
        }

        // Event handler for the button click
        private void CalculateSquare_Click(object sender, RoutedEventArgs e)
        {
            // Parse the input number
            if (double.TryParse(NumberInput.Text, out double number))
            {
                // Calculate the square
                double square = number * number;

                // Display the result
                ResultLabel.Content = $"Square: {square}";
            }
            else
            {
                // Display an error message if the input is invalid
                ResultLabel.Content = "Please enter a valid number!";
            }
        }
    }
}
