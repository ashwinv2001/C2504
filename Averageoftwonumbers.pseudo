<Window x:Class="MdiAppProject.MedicationScheduleWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Medication Schedule" Height="400" Width="600">
    <Grid>
        <ListView ItemsSource="{Binding Medications}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" Width="200" />
                    <GridViewColumn Header="Dose Time" DisplayMemberBinding="{Binding DoseTime}" Width="200" />
                    <GridViewColumn Header="Status" DisplayMemberBinding="{Binding DoseStatus}" Width="200" />
                    <GridViewColumn Header="Actions" Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="Taken" Command="{Binding MarkTakenCommand}" />
                                    <Button Content="Missed" Command="{Binding MarkMissedCommand}" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</Window>




using System;
using System.Collections.ObjectModel;
using System.Windows;
using System.Windows.Input;

namespace MdiAppProject
{
    public class Medication
    {
        public string Name { get; set; }
        public DateTime DoseTime { get; set; }
        public string DoseStatus { get; set; } 

        public ICommand MarkTakenCommand { get; }
        public ICommand MarkMissedCommand { get; }

        public Medication()
        {
            MarkTakenCommand = new RelayCommand1(MarkTaken);
            MarkMissedCommand = new RelayCommand1(MarkMissed);
        }

        private void MarkTaken(object parameter)
        {
            DoseStatus = "Taken";
        }

        private void MarkMissed(object parameter)
        {
            DoseStatus = "Missed";
        }
    }

    public partial class MedicationScheduleWindow : Window
    {
        public ObservableCollection<Medication> Medications { get; set; }

        public MedicationScheduleWindow()
        {
            InitializeComponent(); // Ensure this is called to initialize UI components

            Medications = new ObservableCollection<Medication>
            {
                new Medication { Name = "Medication A", DoseTime = DateTime.Now.AddHours(1), DoseStatus = "Upcoming" },
                new Medication { Name = "Medication B", DoseTime = DateTime.Now.AddHours(-1), DoseStatus = "Missed" },
                new Medication { Name = "Medication C", DoseTime = DateTime.Now, DoseStatus = "Taken" }
            };

            DataContext = this; // Set DataContext for data binding
        }
    }

    public class RelayCommand1 : ICommand
    {
        private readonly Action<object> _execute;
        private readonly Func<bool> _canExecute;

        public RelayCommand1(Action<object> execute, Func<bool> canExecute = null)
        {
            _execute = execute;
            _canExecute = canExecute;
        }

        public bool CanExecute(object parameter) => _canExecute == null || _canExecute();
        public void Execute(object parameter) => _execute(parameter); 

        public event EventHandler CanExecuteChanged
        {
            add => CommandManager.RequerySuggested += value;
            remove => CommandManager.RequerySuggested -= value;
        }
    }
}
