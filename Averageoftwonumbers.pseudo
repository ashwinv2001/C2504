using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections.Generic;

[TestClass]
public class CaptionServiceTests
{
    private CaptionService _service;

    [TestInitialize]
    public void Setup()
    {
        _service = new CaptionService();

        _service.CaptionMessageList = new Dictionary<string, Dictionary<string, CaptionMessageData>>
        {
            {
                "MyAssembly", new Dictionary<string, CaptionMessageData>
                {
                    {
                        "Info001", new CaptionMessageData
                        {
                            MessageList = new Dictionary<string, string>
                            {
                                { "en", "English message" },
                                { "fr", "Message en fran√ßais" }
                            }
                        }
                    }
                }
            }
        };
    }

    [TestMethod]
    public void GetCaption_Returns0_WhenCaptionIsFound()
    {
        string message = "";
        int result = _service.GetCaption(ref message, "MyAssembly", "Info", "001", "en");

        Assert.AreEqual(0, result);
        Assert.AreEqual("English message", message);
    }

    [TestMethod]
    public void GetCaption_Returns1_WhenAssemblyIsNotFound()
    {
        string message = "";
        int result = _service.GetCaption(ref message, "InvalidAssembly", "Info", "001", "en");

        Assert.AreEqual(1, result);
    }

    [TestMethod]
    public void GetCaption_Returns2_WhenTagCodeIsNotFound()
    {
        string message = "";
        int result = _service.GetCaption(ref message, "MyAssembly", "Warn", "999", "en");

        Assert.AreEqual(2, result);
    }

    [TestMethod]
    public void GetCaption_Returns3_WhenLanguageIsNotFound()
    {
        string message = "";
        int result = _service.GetCaption(ref message, "MyAssembly", "Info", "001", "de");

        Assert.AreEqual(3, result);
    }
}
