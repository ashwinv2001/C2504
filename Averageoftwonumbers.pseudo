using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using System.Collections.Generic;
using Toshiba.XRF.PresentationLayer.Common.RxRadApcChangeManage;
using System.Windows;
using System.IO;
using System;
using System.Linq;

namespace Toshiba.XRF.UnitTests
{
    [TestClass]
    public class RxRadApcChangeManageTests
    {
        private Mock<IApp> mockApp;
        private Mock<IUniversalInfo> mockUniversalInfo;

        [TestInitialize]
        public void TestInitialize()
        {
            mockUniversalInfo = new Mock<IUniversalInfo>();
            mockUniversalInfo.SetupGet(u => u.LimitValue.ApcMaxLimit).Returns(100);
            mockUniversalInfo.SetupGet(u => u.IsEachImageSave).Returns(false);
            mockUniversalInfo.SetupGet(u => u.IsConfirmAPCChanged).Returns(true);

            mockApp = new Mock<IApp>();
            mockApp.SetupGet(a => a.MyUniversalInfo).Returns(mockUniversalInfo.Object);
            mockApp.Setup(a => a.EventRequest(It.IsAny<EventType>(), It.IsAny<List<object>>())).Verifiable();
            mockApp.Setup(a => a.LogOut(It.IsAny<int>())).Verifiable();

            Application.ResourceAssembly.GetType().GetProperty("Current").SetValue(null, mockApp.Object);
        }

        [TestMethod]
        public void ApcChangeProc_ValidInput_ShouldReturnTrue()
        {
            // Arrange
            var relationInfo = new ImageRelationInfo(); // Fill this as needed
            var iniApcData = new IniApcData.APCData
            {
                list = new IniApcData.APCList
                {
                    APC = new List<IniApcData.APC>
                    {
                        new IniApcData.APC
                        {
                            No = 1,
                            APCDATA = new IniApcData.APCDATA { /* fill with valid data */ }
                        }
                    }
                }
            };

            var hTypeValues = new List<string> { "H1", "H2" };
            int seqNumber;
            string dummyImagePath = @"C:\Temp\TestImage.dcm";
            string dummyFile = Path.Combine(Path.GetDirectoryName(dummyImagePath), "ActualInfo.csv");

            // Create dummy files/folders if necessary
            Directory.CreateDirectory(Path.GetDirectoryName(dummyImagePath));
            File.WriteAllText(dummyImagePath, "fake content");
            File.WriteAllText(dummyFile, "fake csv content");

            // Mock any file helpers or statics if possible via wrappers

            // Act
            bool result = RxRadApcChangeManage.ApcChangeProc(relationInfo, iniApcData, 1,
                dummyImagePath, hTypeValues, 0, out seqNumber,
                ExecutingAssembly.PL, true);

            // Assert
            Assert.IsTrue(result);
            Assert.IsTrue(seqNumber >= 0);
            mockApp.Verify();
        }
    }
}
