using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Windows.Input;

public class MainViewModel : INotifyPropertyChanged
{
    private string _newItem;
    public string NewItem
    {
        get { return _newItem; }
        set
        {
            _newItem = value;
            OnPropertyChanged(nameof(NewItem));
        }
    }

    public ObservableCollection<string> Items { get; set; }
    public ICommand AddItemCommand { get; }
    public ICommand DeleteItemCommand { get; }

    public MainViewModel()
    {
        Items = new ObservableCollection<string>();
        AddItemCommand = new RelayCommand(AddItem, CanAddItem);
        DeleteItemCommand = new RelayCommand(DeleteItem, CanDeleteItem);
    }

    private void AddItem(object parameter)
    {
        Items.Add(NewItem);
        NewItem = string.Empty;
    }

    private bool CanAddItem(object parameter)
    {
        return !string.IsNullOrWhiteSpace(NewItem);
    }

    private void DeleteItem(object parameter)
    {
        if (parameter is string item)
        {
            Items.Remove(item);
        }
    }

    private bool CanDeleteItem(object parameter)
    {
        return parameter is string item && Items.Contains(item);
    }

    public event PropertyChangedEventHandler PropertyChanged;
    protected void OnPropertyChanged(string propertyName)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}




<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Simple List Manager" Height="300" Width="400">

    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Input Section -->
        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
            <TextBox Width="200" Text="{Binding NewItem, UpdateSourceTrigger=PropertyChanged}" 
                     Margin="0,0,10,0" />
            <Button Content="Add" Command="{Binding AddItemCommand}" />
        </StackPanel>

        <!-- List Display Section -->
        <ListBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}"
                 Grid.Row="1" Margin="0,0,0,10">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding}" Width="200" />
                        <Button Content="Delete" Command="{Binding DataContext.DeleteItemCommand, 
                                RelativeSource={RelativeSource AncestorType=Window}}"
                                CommandParameter="{Binding}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
