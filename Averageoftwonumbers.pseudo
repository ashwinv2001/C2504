using System;
using System.Data.SqlClient;
using System.Windows;

namespace MATProject.Pages
{
    public partial class PatientProfileWindow : Window
    {
        // Replace with your actual connection string
        private readonly string connectionString = "Server=YourServerName;Database=YourDatabaseName;User Id=YourUsername;Password=YourPassword;";

        public PatientProfileWindow()
        {
            InitializeComponent();
            btnSave.Click += BtnSave_Click; // Attach click event handler for save button
        }

        private void BtnSave_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                // Collect data from the form fields
                string name = txtName.Text;
                DateTime? dateOfBirth = (DateTime?)dpDateOfBirth.SelectedDate;
                string medicalConditions = txtMedicalConditions.Text;
                string allergies = txtAllergies.Text;
                string emergencyContacts = txtEmergencyContacts.Text;

                // Check if required fields are filled
                if (string.IsNullOrEmpty(name) || !dateOfBirth.HasValue)
                {
                    MessageBox.Show("Please enter the required fields.", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                    return;
                }

                // Insert data into the SQL database
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string query = "INSERT INTO PatientProfiles (Name, DateOfBirth, MedicalConditions, Allergies, EmergencyContacts) VALUES (@Name, @DateOfBirth, @MedicalConditions, @Allergies, @EmergencyContacts)";

                    using (SqlCommand command = new SqlCommand(query, connection))
                    {
                        command.Parameters.AddWithValue("@Name", name);
                        command.Parameters.AddWithValue("@DateOfBirth", dateOfBirth.Value);
                        command.Parameters.AddWithValue("@MedicalConditions", medicalConditions);
                        command.Parameters.AddWithValue("@Allergies", allergies);
                        command.Parameters.AddWithValue("@EmergencyContacts", emergencyContacts);

                        command.ExecuteNonQuery();
                    }
                }

                MessageBox.Show("Profile saved successfully!", "Success", MessageBoxButton.OK, MessageBoxImage.Information);
                ClearFields();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error saving profile: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void ClearFields()
        {
            txtName.Text = string.Empty;
            dpDateOfBirth.SelectedDate = null;
            txtMedicalConditions.Text = string.Empty;
            txtAllergies.Text = string.Empty;
            txtEmergencyContacts.Text = string.Empty;
        }
    }
}
