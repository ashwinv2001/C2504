using System;
using System.IO;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using Microsoft.Win32;
using System.Xml.Linq;
using System.Xml.Serialization;

namespace deserializationnew
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        private TreeViewItem _selectedNode;
        private XElement _selectedElement;
        private XDocument _xmlDocument;
        private string _filePath;

        public MainWindow()
        {
            InitializeComponent();
        }

        private void BrowseButton_Click(object sender, RoutedEventArgs e)
        {
            OpenFileDialog openFileDialog = new OpenFileDialog
            {
                Filter = "XML Files (*.xml)|*.xml",
                Title = "Select an XML File"
            };

            if (openFileDialog.ShowDialog() == true)
            {
                FilePathTextBox.Text = openFileDialog.FileName;
                _filePath = openFileDialog.FileName;
                _xmlDocument = XDocument.Load(_filePath);
                DeserializeXml(_filePath);
            }
        }

        private void nodeclick(object sender, RoutedPropertyChangedEventArgs<object> e)
        {
            if (XmlTreeView.SelectedItem is TreeViewItem selectedItem)
            {
                _selectedNode = selectedItem;
                _selectedElement = selectedItem.DataContext as XElement;
            }
        }

        private void renameclick(object sender, RoutedEventArgs e)
        {
            if (_selectedNode != null)
            {
                TextBox textBox = new TextBox
                {
                    Text = _selectedNode.Header.ToString()
                };
                textBox.LostFocus += TextBox_LostFocus;
                textBox.KeyDown += TextBox_KeyDown;

                _selectedNode.Header = textBox;
                textBox.Focus();
            }
        }

        private void TextBox_LostFocus(object sender, RoutedEventArgs e)
        {
            FinalizeRename(sender as TextBox);
        }

        private void TextBox_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.Enter)
            {
                FinalizeRename(sender as TextBox);
            }
        }

        private void FinalizeRename(TextBox textBox)
        {
            if (textBox != null && _selectedNode != null && _selectedElement != null)
            {
                _selectedNode.Header = textBox.Text;
                _selectedElement.SetAttributeValue("Name", textBox.Text);
                _xmlDocument.Save(_filePath);
            }
        }

        private void deleteclick(object sender, RoutedEventArgs e)
        {
            if (_selectedNode != null && _selectedElement != null)
            {
                if (_selectedNode.Parent is ItemsControl parent)
                {
                    parent.Items.Remove(_selectedNode);
                }

                _selectedElement.Remove();
                _xmlDocument.Save(_filePath);
            }
        }

        private void DeserializeXml(string filePath)
        {
            XmlSerializer serializer = new XmlSerializer(typeof(Repository));

            using (FileStream fileStream = new FileStream(filePath, FileMode.Open))
            {
                Repository repository = (Repository)serializer.Deserialize(fileStream);
                DisplayInTreeView(repository, _xmlDocument.Root);
            }
        }

        private void DisplayInTreeView(Repository repository, XElement rootElement)
        {
            XmlTreeView.Items.Clear();

            foreach (var title in repository.Titles)
            {
                TreeViewItem titleItem = new TreeViewItem
                {
                    Header = title.DisplayName ?? title.Value,
                    DataContext = FindElementByName(rootElement, title.DisplayName ?? title.Value)
                };

                foreach (var controlInfo in title.ControlInfos)
                {
                    TreeViewItem controlInfoItem = new TreeViewItem
                    {
                        Header = $"{controlInfo.DisplayName} ({controlInfo.Type})",
                        DataContext = FindElementByName(rootElement, controlInfo.DisplayName)
                    };

                    titleItem.Items.Add(controlInfoItem);
                }

                XmlTreeView.Items.Add(titleItem);
            }
        }

        private XElement FindElementByName(XElement root, string name)
        {
            return root.Descendants().FirstOrDefault(e => e.Attribute("Name")?.Value == name);
        }
    }
}
