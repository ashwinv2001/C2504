<Window x:Class="ExeLauncher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Exe Launcher" Height="250" Width="400">
    <Grid>
        <TextBox x:Name="ExePathTextBox" Width="300" Height="30" Margin="10" VerticalAlignment="Top"/>
        <Button Content="Browse" Width="75" Height="30" Margin="320,10,10,0" VerticalAlignment="Top" Click="BrowseButton_Click"/>
        <Button Content="Run Exe" Width="100" Height="40" Margin="10,50,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Click="RunExeButton_Click"/>
        <Label x:Name="StatusLabel" Content="" HorizontalAlignment="Left" Margin="10,110,0,0" VerticalAlignment="Top" Foreground="Green"/>
    </Grid>
</Window>





using System;
using System.Diagnostics;
using System.IO;
using System.Threading.Tasks;
using System.Windows;

namespace ExeLauncher
{
    public partial class MainWindow : Window
    {
        private Process _exeProcess;

        public MainWindow()
        {
            InitializeComponent();
        }

        private void BrowseButton_Click(object sender, RoutedEventArgs e)
        {
            // Open a file dialog to select an exe file
            Microsoft.Win32.OpenFileDialog openFileDialog = new Microsoft.Win32.OpenFileDialog
            {
                Filter = "Executable Files (*.exe)|*.exe",
                Title = "Select an Exe File"
            };

            if (openFileDialog.ShowDialog() == true)
            {
                ExePathTextBox.Text = openFileDialog.FileName;
            }
        }

        private async void RunExeButton_Click(object sender, RoutedEventArgs e)
        {
            string exePath = ExePathTextBox.Text;

            if (string.IsNullOrWhiteSpace(exePath) || !File.Exists(exePath))
            {
                MessageBox.Show("Please select a valid .exe file path.", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                return;
            }

            try
            {
                // Start the process
                _exeProcess = new Process
                {
                    StartInfo = new ProcessStartInfo
                    {
                        FileName = exePath,
                        UseShellExecute = true // Allows running UWP apps too
                    }
                };

                _exeProcess.Start();
                StatusLabel.Content = "Process started. Waiting for 10 seconds...";

                // Wait for 10 seconds
                await Task.Delay(10000);

                // Close the process if it is still running
                if (!_exeProcess.HasExited)
                {
                    _exeProcess.Kill();
                    StatusLabel.Content = "Process closed successfully.";
                }
                else
                {
                    StatusLabel.Content = "Process already exited.";
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
    }
}
