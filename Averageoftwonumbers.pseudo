using System;
using System.Runtime.InteropServices;

namespace WpfUwpRestorer
{
    // The COM interface for activating UWP apps.
    [ComImport]
    [Guid("2e941141-7f97-4756-ba1d-9decde894a3d")]
    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    public interface IApplicationActivationManager
    {
        // Activates an application for normal activation.
        int ActivateApplication(
            [In, MarshalAs(UnmanagedType.LPWStr)] string appUserModelId,
            [In, MarshalAs(UnmanagedType.LPWStr)] string arguments,
            [In] ActivateOptions options,
            [Out] out uint processId);

        // Activates an application for a file.
        int ActivateForFile(
            [In, MarshalAs(UnmanagedType.LPWStr)] string appUserModelId,
            [In] IntPtr /*IShellItemArray*/ shellItemArray,
            [In, MarshalAs(UnmanagedType.LPWStr)] string verb,
            [Out] out uint processId);

        // Activates an application for a protocol.
        int ActivateForProtocol(
            [In, MarshalAs(UnmanagedType.LPWStr)] string appUserModelId,
            [In] IntPtr /*IShellItemArray*/ shellItemArray,
            [Out] out uint processId);
    }

    // The COM class that implements IApplicationActivationManager.
    [ComImport]
    [Guid("45BA127D-10A8-46EA-8AB7-56EA9078943C")]
    [ClassInterface(ClassInterfaceType.None)]
    public class ApplicationActivationManager : IApplicationActivationManager
    {
        // No implementation is neededâ€”this COM class provides it.
    }

    // Activation options. For our purposes, we just use None.
    [Flags]
    public enum ActivateOptions
    {
        None = 0x00000000,
        DesignMode = 0x00000001,
        NoErrorUI = 0x00000002,
        NoSplashScreen = 0x00000004,
    }
}
