using System;
using System.Windows;
using System.Windows.Controls;

namespace deserialization
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            DataContext = new MainWindowViewModel(); // Set ViewModel as DataContext
        }

        private void TreeView_SelectedItemChanged(object sender, RoutedPropertyChangedEventArgs<object> e)
        {
            if (e.NewValue is XmlNodeViewModel selectedNode)
            {
                var viewModel = DataContext as MainWindowViewModel;
                if (viewModel != null)
                {
                    viewModel.SelectedNode = selectedNode;
                }
            }
        }

        // Handle the Rename operation on ContextMenu click
        private void RenameMenuItem_Click(object sender, RoutedEventArgs e)
        {
            if (treeView.SelectedItem is XmlNodeViewModel selectedNode)
            {
                string newName = PromptForInput("Enter new name for the node:", selectedNode.Name);
                if (!string.IsNullOrEmpty(newName))
                {
                    var viewModel = DataContext as MainWindowViewModel;
                    if (viewModel != null)
                    {
                        // Rename the node in the ViewModel
                        selectedNode.Name = newName;

                        // Rename the corresponding XML element
                        var element = selectedNode.XmlElement;
                        if (element != null)
                        {
                            element.Name = System.Xml.Linq.XName.Get(newName);
                            viewModel.SaveXmlChanges(); // Save the changes to the XML file
                        }

                        // Notify the UI that the name has changed
                        viewModel.OnPropertyChanged(nameof(viewModel.XmlTree));
                    }
                }
            }
        }

        // Handle the Delete operation on ContextMenu click
        private void DeleteMenuItem_Click(object sender, RoutedEventArgs e)
        {
            if (treeView.SelectedItem is XmlNodeViewModel selectedNode)
            {
                var viewModel = DataContext as MainWindowViewModel;
                if (viewModel != null)
                {
                    // Confirm before deleting
                    var result = MessageBox.Show($"Are you sure you want to delete the node '{selectedNode.Name}'?", "Confirm Delete", MessageBoxButton.YesNo, MessageBoxImage.Warning);
                    if (result == MessageBoxResult.Yes)
                    {
                        // Delete the node from the ViewModel
                        viewModel.XmlTree.Remove(selectedNode);

                        // Delete the corresponding XML element
                        var element = selectedNode.XmlElement;
                        if (element != null)
                        {
                            element.Remove();
                            viewModel.SaveXmlChanges(); // Save the changes to the XML file
                        }

                        // Notify the UI that the tree has changed
                        viewModel.OnPropertyChanged(nameof(viewModel.XmlTree));
                    }
                }
            }
        }

        // Prompt the user for a new name (used for rename)
        private string PromptForInput(string message, string defaultInput = "")
        {
            InputDialog inputDialog = new InputDialog(defaultInput);
            return inputDialog.ShowDialog() == true ? inputDialog.InputText : null;
        }
    }
}
