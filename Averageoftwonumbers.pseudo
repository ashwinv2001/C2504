using System;
using System.Diagnostics;
using System.IO;
using System.Windows;

namespace Java
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void CheckJavaAndAccessBridge_Click(object sender, RoutedEventArgs e)
        {
            bool isJreInstalled = CheckJreInstalled();
            bool isAccessBridgeEnabled = CheckJavaAccessBridgeEnabled();

            if (isJreInstalled && isAccessBridgeEnabled)
            {
                MessageBox.Show("JRE and Java Access Bridge are enabled.");
            }
            else if (isJreInstalled)
            {
                MessageBox.Show("JRE is installed, but Java Access Bridge is not enabled.");
            }
            else
            {
                MessageBox.Show("JRE is not installed.");
            }
        }

        private bool CheckJreInstalled()
        {
            string jreHomePath = @"C:\jdk-11.0.2";
            return Directory.Exists(jreHomePath) && File.Exists(System.IO.Path.Combine(jreHomePath, "bin", "java.exe"));
        }

        private bool CheckJavaAccessBridgeEnabled()
        {
            try
            {
                // Check Access Bridge state using command-line jabswitch
                Process process = new Process
                {
                    StartInfo = new ProcessStartInfo
                    {
                        FileName = "cmd.exe",
                        Arguments = "/c jabswitch -enable", // Checking if it can enable implies it's not already active
                        RedirectStandardOutput = true,
                        UseShellExecute = false,
                        CreateNoWindow = true
                    }
                };
                
                process.Start();
                string result = process.StandardOutput.ReadToEnd();
                process.WaitForExit();
                
                // Interpret output
                return result.Contains("already enabled"); // Adjust based on observed output
            }
            catch
            {
                return false;
            }
        }
    }
}
