using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using System.Collections.Generic;
using System.Windows;
using Toshiba.XRF.PresentationLayer.Common.RxRadApcChangeManage;
using Toshiba.XRF.PresentationLayer.Common.Interface.Image;
using Toshiba.XRF.Utility.Common.XmlDataAccess;
using System.Reflection;

namespace May30unittest
{
    [TestClass]
    public class ApcChangeProcTests
    {
        [AssemblyInitialize]
        public static void InitApplicationContext(TestContext context)
        {
            if (Application.Current == null)
            {
                new Application();
            }
        }

        [TestMethod]
        public void ApcChangeProc_ShouldReturnTrue_WhenValidDataProvided()
        {
            // Arrange
            var relationInfo = new ImageRelationInfo();

            var iniApcInfo = new IniApcData.APCData
            {
                list = new IniApcData.LIST
                {
                    APC = new List<IniApcData.APC>
                    {
                        new APCStub
                        {
                            APC_Number = 1,
                            APC_Region = "Chest",
                            APC_Physique = "Normal",
                            APC_Orientation = "AP",
                            APC_LeftRight = "Left",
                            APC_RadiographicOrientation = "PA"
                        }
                    }
                }
            };

            int apcNumber = 1;
            string ipSourceFilename = "mockFile.txt";
            var hTypePartDatavalues = new List<string> { "Value1", "Value2" };
            int offsetGeneImageNumber = 10;
            int seqNumber;

            Application.Current.Properties["App"] = new Mock<IApp>().Object;

            // Act
            bool result = RxRadApcChangeManage.ApcChangeProc(
                relationInfo,
                iniApcInfo,
                apcNumber,
                ipSourceFilename,
                hTypePartDatavalues,
                offsetGeneImageNumber,
                out seqNumber,
                Assembly.GetExecutingAssembly(),
                true
            );

            // Assert
            Assert.IsTrue(result);
        }

        // âœ… Stub class inside test to simulate full APCDATA
        private class APCStub : IniApcData.APC
        {
            public int APC_Number { get; set; }
            public string APC_Region { get; set; }
            public string APC_Physique { get; set; }
            public string APC_Orientation { get; set; }
            public string APC_LeftRight { get; set; }
            public string APC_RadiographicOrientation { get; set; }
        }
    }
}
