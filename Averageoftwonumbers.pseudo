using System;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace javainstallation
{
    public partial class Form1 : Form
    {
        private bool p = false; // Flag to prevent re-triggering the event
        private CheckBox checkBox;

        public Form1()
        {
            InitializeComponent();

            checkBox = new CheckBox
            {
                Text = "Check if JRE is installed and JAVA ACCESS BRIDGE is enabled",
                Location = new System.Drawing.Point(250, 100),
                AutoSize = true
            };

            // Subscribe to the CheckedChanged event
            checkBox.CheckedChanged += CheckBox_CheckedChanged;

            // Add the checkbox to the form
            Controls.Add(checkBox);
        }

        private void CheckBox_CheckedChanged(object sender, EventArgs e)
        {
            if (p) return; // Skip execution if the change is programmatic

            p = true; // Set flag to true to avoid re-triggering the event

            bool isJreInstalled = CheckJreInstalled();
            bool isAccessBridgeEnabled = CheckJavaAccessBridgeEnabled();

            if (isJreInstalled && isAccessBridgeEnabled)
            {
                checkBox.Checked = true;
            }
            else if (isJreInstalled)
            {
                checkBox.Checked = false;
                MessageBox.Show("JRE is installed, but Java Access Bridge is disabled.");
            }
            else
            {
                checkBox.Checked = false;
                MessageBox.Show("JRE is not installed.");
            }

            p = false; // Reset flag after the programmatic change
        }

        private bool CheckJreInstalled()
        {
            string jreHomePath = Environment.GetEnvironmentVariable("JAVA_HOME");
            return Directory.Exists(jreHomePath) && File.Exists(Path.Combine(jreHomePath, "bin", "java.exe"));
        }

        private bool CheckJavaAccessBridgeEnabled()
        {
            try
            {
                string filePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile), ".accessibility.properties");

                if (!File.Exists(filePath))
                {
                    throw new FileNotFoundException("The .accessibility.properties file does not exist.");
                }

                string firstLine = File.ReadLines(filePath).FirstOrDefault();
                return firstLine != null && !firstLine.TrimStart().StartsWith("#");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
                return false;
            }
        }
    }
}
