ASSIGNMENT

1.Usage of out keyword


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp39
{
    internal class Programs
    {
        long findSumExtended(long a, long b, out long diff, out long prod,
            out long quotient, out long remaninder)
        {
            //long x = diff + prod;//ERR, using out arg before updating to 'out' arg throws ERR
            long sum = a + b;
            diff = a - b;
            prod = a * b;
            quotient = a / b;
            remaninder = a % b; //All out args should be updated before returning from the fn
                                //long x = diff + prod;//No ERR, using out arg after updating to 'out' arg is VALID
            return sum;
        }
        static void Main(string[] args)
        {
            Programs programs = new Programs();
            long s, d = 10, p = 20, q = 30, r = 40;
            s = programs.findSumExtended(20, 3, out d, out p, out q, out r);
            Console.WriteLine($"sum={s}, diff={d}, prod={p}, quotient={q}, remaninder={r}");
            //23, 17, 60, 6, 2
        }
    }
}

2.Usage of ref keyword

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp39
{
    internal class Programs
    {
        void swap(ref long a,ref long b)
        {
            long t = a;
            a = b;
            b = t;
        }
        static void Main(string[] args)
        {
            Programs programs = new Programs();
            long x = 10, y = 20;
            Console.WriteLine("before swapping........");
            Console.WriteLine($"x ={x},y ={y}");
            Console.WriteLine("after swapping........");
            programs.swap(ref x,ref y);
            Console.WriteLine($"x ={ x},y ={ y}");
        }
    }
}


3.Use of params

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp36
{
    using System;

    class Program
    {
        static void SumOfNos(params int[] numbers)\\only one params arg used,params should be placed last,overloadable
        {
            int sum = 0;
            foreach (int number in numbers)
            {
                sum = sum + number;
            }
            Console.WriteLine(sum);
        }
        static void Main()
        {
            Console.Write("sum of 3 nos: ");
            SumOfNos(1,2,3);
            Console.Write("sum of 2 nos: ");
            SumOfNos(5,10);
            Console.Write("sum of 10 nos: ");
            SumOfNos(1,2,3,4,5,6,7,8,9,10);

        }
    }

}
